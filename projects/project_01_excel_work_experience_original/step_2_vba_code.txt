Sub Formatting()
    Dim searchValue As String
    Dim lastRow As Long
    Dim i As Long
    
    ' Set the value to search for
    searchValue = "Current Value of your Total Investment is"
    
    ' Find the row number of the search value
    Dim searchRow As Long
    searchRow = ActiveSheet.Cells.Find(What:=searchValue, LookIn:=xlValues, LookAt:=xlPart).Row
    
    ' Find the last row containing some text
    lastRow = Cells(Rows.Count, 1).End(xlUp).Row
    
    ' Loop through each row from the row containing the search value to the last row
    For i = searchRow To lastRow
        ' Delete the entire row
        Rows(searchRow).Delete
    Next i
    
    ' Delete rows 1 to 12
    For i = 12 To 1 Step -1
        ' Delete the entire row
        Rows(i).Delete
    Next i
    
    ' Decrease Font Size
    ActiveSheet.UsedRange.Font.Size = 9

    ' Autofit all columns
    ActiveSheet.Columns.AutoFit
    
    ' Wrap first row
    Rows("1:1").Select
    With Selection
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Cells.Select
    Selection.ColumnWidth = 4
    Cells.EntireRow.AutoFit
    Cells.EntireColumn.AutoFit
    Rows("1:1").Select
    With Selection
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Cells.Select
    Cells.EntireColumn.AutoFit
    Cells.EntireRow.AutoFit
    
    ' Yellow color formatting
    Dim searchValue1 As String
    Dim searchValue2 As String
    Dim searchValue3 As String
    Dim foundRow3 As Long
    Dim foundColumn1 As Long
    Dim foundColumn2 As Long

    ' Set the value to search for
    searchValue1 = "Amount "
    searchValue2 = "Total "
    searchValue3 = "Grand Total"
    
    ' Find the cell of the search value
    Set foundCell1 = ActiveSheet.Cells.Find(What:=searchValue1, LookIn:=xlValues, LookAt:=xlPart)
    Set foundCell2 = ActiveSheet.Cells.Find(What:=searchValue2, LookIn:=xlValues, LookAt:=xlPart)
    
    foundColumn1 = foundCell1.Column
    foundColumn2 = foundCell2.Column

    foundRow3 = ActiveSheet.Cells.Find(What:=searchValue3, LookIn:=xlValues, LookAt:=xlPart).Row
   
    ' Change the cell's color
    foundCell1.Interior.Color = RGB(255, 255, 0)    ' Yellow
    foundCell2.Interior.Color = RGB(255, 255, 0)    ' Yellow
    Cells(foundRow3, foundColumn1).Interior.Color = RGB(255, 255, 0)    ' Yellow
    Cells(foundRow3, foundColumn2).Interior.Color = RGB(255, 255, 0)    ' Yellow

    ' All borders
    With ActiveSheet.UsedRange.Borders
    .LineStyle = xlContinuous
    .Color = RGB(0, 0, 0)   'Black
    .Weight = xlThin
     End With




  Dim mergedRanges As Range
    Dim searchTexts As Variant
    Dim searchText As Variant
    Dim columnNumber As Integer
    
    searchTexts = Array("UCC", "ISIN", "Folio No", "Div.Reinv.", "Div R", "Div P", "Annualized Return", "Abs. Return")
    
    
    
    ' Find the column number of the column after the third text
    columnNumber = FindColumnByHeaderText("Abs. Return")
    ' If the column after the third text is found, delete it
    If columnNumber > 0 Then
        ActiveSheet.Columns(columnNumber + 1).Delete
    Else
        MsgBox "Column after 'Text3' not found."
    End If
    
    
    
    ' Loop through each search text
    For Each searchText In searchTexts
        ' Find the column number based on the search text
        columnNumber = FindColumnByHeaderText(CStr(searchText)) ' Convert searchText to string
        
        If columnNumber > 0 Then
            ' Store merged ranges in the column to be deleted
            On Error Resume Next
            Set mergedRanges = ActiveSheet.Columns(columnNumber).MergeArea
            On Error GoTo 0
            
            ' Delete the column
            ActiveSheet.Columns(columnNumber).Delete
            
            ' Re-merge cells if necessary
            If Not mergedRanges Is Nothing Then
                mergedRanges.Merge
            End If

        End If
    Next searchText





End Sub



Function FindColumnByHeaderText(ByVal searchText As String) As Integer
    Dim headerRow As Range
    Dim foundCell As Range
    Dim firstAddress As String
    
    Set headerRow = ActiveSheet.Rows(1) ' Assuming the heading row is the first row
    
    ' Perform a case-insensitive search in the header row for the search text
    Set foundCell = headerRow.Find(What:=searchText, LookIn:=xlValues, LookAt:=xlPart, MatchCase:=False)
    
    ' If a cell containing the search text is found, return its column number
    If Not foundCell Is Nothing Then

        Do
            
            FindColumnByHeaderText = foundCell.Column
            Exit Function
            Set foundCell = headerRow.FindNext(foundCell)
           
        Loop While Not foundCell Is Nothing And foundCell.Address <> firstAddress
    End If
    
    ' If the search text is not found, return 0
    FindColumnByHeaderText = 0
End Function
